Ch_reg     = Ch[lb:ub]
s_hist_reg = s_hist[lb:ub]
theta_0  = log(c(mu_G2_0, sd_G2_0_width))
lb_theta = c(0,log(c(lb, 1e-3)))
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
plot(Ch_reg_log,s_hist_reg)
theta_0
lb_theta = c(1e-6,log(c(lb, 1e-3)))
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
lb_theta = c(1e-3,log(c(lb, 1e-3)))
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
lb_theta = c(1e-5,log(c(lb, 1e-3)))
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
exp_data <- c(rnorm(400,380,20),rnorm(800,200,9),rnorm(300,295,35)) #sample input
#set initial G1 peak index(optional)
opt = NULL
n_Ch = round(length(exp_data)/10);
Ch = 1:n_Ch
dens = density(exp_data,n = n_Ch)
dens_y <- dens$y
# Step 1
temp <- matrix(0,n_Ch,n_Ch)
for (i in 1:length(dens_y)){
temp[,i] <- dens_y*dnorm(Ch,Ch[i],0.75)
}
s_hist = apply(temp,2,sum)
# Step 2
Ch_min = 1
Ch_max = n_Ch
# Step 3
if (is.null(opt)){
mu_G1_0 <- which.max(s_hist)
sd_G1_0 = which(s_hist>0.6*max(s_hist))[1]
sd_G1_0_width = mu_G1_0 - sd_G1_0
}else{
mu_G1_0 = opt
sd_G1_0 = which(s_hist>0.6*max(s_hist))[1]
sd_G1_0_width = abs(mu_G1_0 - sd_G1_0)
}
# Step 4
lb = mu_G1_0 - 3*sd_G1_0_width + 1
ub = mu_G1_0 + sd_G1_0_width - 1
Ch_reg     = Ch[lb:ub]
s_hist_reg = s_hist[lb:ub]
theta_0 = log(c(mu_G1_0, sd_G1_0_width))
lb_theta = c(1e-5,log(lb, 1e-3))
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
theta <- summary(model)$coefficients[,1]
plot(Ch_reg_log,s_hist_reg)
lines(Ch_reg_log,theta['n1']*dnorm(Ch_reg_log,theta['mu_G1'],theta['theta_G1']))
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
set.seed()
set.seed(0)
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
theta_0 = log(c(mu_G1_0, sd_G1_0_width))
lb_theta = c(1e-5,log(lb, 1e-2))
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
set.seed(2)
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
set.seed(3)
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
set.seed(4)
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
theta_0
lb_theta
theta_0 = log(c(mu_G1_0, sd_G1_0_width))
lb_theta = c(1e-5,log(lb),1e-3)
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n1*dnorm(Ch_reg_log,mu_G1,theta_G1),start = list(n1=0.1,mu_G1 = theta_0[1],theta_G1 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
theta <- summary(model)$coefficients[,1]
plot(Ch_reg_log,s_hist_reg)
lines(Ch_reg_log,theta['n1']*dnorm(Ch_reg_log,theta['mu_G1'],theta['theta_G1']))
mu_G1 = round(exp(theta[2]))
sd_G1_width = round(exp(theta[3]))
# Step 5
lb = round(1.75*mu_G1+1)
s_hist_reg = s_hist[lb:length(s_hist)]
mu_G2_0 = which.max(s_hist_reg) + lb - 1
sd_G2_0 = tail(which(s_hist > 0.6*max(s_hist_reg)),1)
sd_G2_0_width = sd_G2_0 - mu_G2_0;
# Step 6
lb = mu_G2_0 - sd_G2_0_width + 1
ub = min(c(Ch_max,mu_G2_0 + 3*sd_G2_0_width - 1))
Ch_reg     = Ch[lb:ub]
s_hist_reg = s_hist[lb:ub]
theta_0  = log(c(mu_G2_0, sd_G2_0_width))
lb_theta = c(1e-5,log(c(lb, 1e-3)))
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
Ch_reg_log <- log(Ch_reg)
plot(Ch_reg_log,s_hist_reg)
lb_theta = c(1e-5,log(c(lb)), 1e-3)
ub_theta = c(1,log(c(ub, (ub-lb)/2)))
lb_theta
ub_theta
Ch_reg_log <- log(Ch_reg)
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
?nls
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port',control = list('tol' = 1e-04))
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port',control = list('tol' = 1e-03))
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port',control = list('tol' = 1e-02))
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port',control = list('tol' = 1e-01))
model <- nls(s_hist_reg ~ n2*dnorm(Ch_reg_log,mu_G2,theta_G2),start = list(n2=0.1,mu_G2 = theta_0[1],theta_G2 = theta_0[2]),
lower = as.list(lb_theta),upper = as.list(ub_theta),algorithm = 'port')
g1 = 400
g2 = 200
s = 200
k1=k2=k3=1/24
g1p=g1
g2p=g2
sp=s
g1 = 400
g2 = 200
s = 200
k1=k2=k3=1/24
g1p=g1
g2p=g2
sp=s
for(i in 1:24){
g1p <- 2*k3*g2p-k1*g1p +g1p
sp <- k1*g1p-k2*sp+sp
g1p <- k2*sp-k3*g2p+g2p
}
g1 = 400
g2 = 200
s = 200
k1=k2=k3=1/24
g1p=g1
g2p=g2
sp=s
for(i in 1:24){
g1p <- 2*k3*g2p-k1*g1p +g1p
sp <- k1*g1p-k2*sp+sp
g2p <- k2*sp-k3*g2p+g2p
}
g1p+sp+g2p
g1 = 400
g2 = 200
s = 200
k1=k2=k3=1/24
g1 = 400
g2 = 200
s = 200
k1=k2=k3=1/24
g1p=g1
g2p=g2
sp=s
for(i in 1:24){
g1p <- 2*k3*g2p-k1*g1p +g1p
sp <- k1*g1p-k2*sp+sp
g2p <- k2*sp-k3*g2p+g2p
}
g1p+sp+g2p
xxx <- read.table("~/Desktop/10_S10_R-freebayes.vcf", quote="\"", stringsAsFactors=FALSE)
View(xxx)
xxx=xxx[1:5,]
aaa=xxx[1,8]
aaa
bbb <- gsub('(.+)\|.+|',aaa)
bbb <- gsub('(.+)|.+|','',aaa)
bbb
bbb <- strsplit(aaa,'||||||')
bbb
bbb <- strsplit(aaa,'||||||,')
bbb
bbb <- strsplit(aaa,'||||||,',fixed = T)
bbb
bbb <- strsplit(aaa,'||||||',fixed = T)
bbb
bbb <- gsub('(.+;).+','',aaa)
bbb
bbb <- gsub('.+;(.+)','\\1',aaa)
bbb
aaa.vep <- read.table("~/Documents/aaa.vep.txt", quote="\"")
View(aaa.vep)
vep
aaa=aaa.vep
aaa.vep=''
xxx=table(aaa$V7)
xxx
keep_types <- c('coding_sequence_variant','frameshift_variant','inframe_deletion','inframe_insertion','missense_variant','protein_altering_variant','start_lost','stop_gained','stop_lost')
test=list(c('a','b'),'c')
test
'a' %in% test
aaa <- aaa[aaa$V7 %in% keep_types]
aaa <- aaa[aaa$V7 %in% keep_types,]
View(aaa)
aaa[1,14]
genes <- gsub('SYMBOLS=(.+);SYMBOL_SOURCE','\\1',aaa$V14)
head(genes)
xxx=aaa$V14[1]
xxx
xxx
vep <- read.table("~/Documents/aaa.vep.txt", quote="\"",stringsAsFactors = F)
aaa <- vep[vep$V7 %in% keep_types,]
genes <- gsub('SYMBOLS=(.+);SYMBOL_SOURCE','\\1',aaa$V14)
genes
test=aaa[1]
genes <- gsub('.+SYMBOLS=(.+);SYMBOL_SOURCE.+','\\1',aaa$V14)
genes
genes <- gsub('.+SYMBOLS=(.+);SYMBOL_SOURCE.+','\\1',test)
genes
test
test=aaa$V14[1]
test
genes <- gsub('.+SYMBOLS=(.+);SYMBOL_SOURCE.+','\\1',test)
genes
genes <- gsub('.+SYMBOLS=(\\w+);SYMBOL_SOURCE.+','\\1',test)
genes
genes <- gsub('.+SYMBOLS\\=(.+);SYMBOL_SOURCE.+','\\1',test)
genes
genes <- gsub('IMPACT=(.+)','\\1',test)
genes
genes <- gsub('.+SYMBOL=(.+)','\\1',test)
genes
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE','\\1',test)
genes
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE.+','\\1',test)
genes
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE.+','\\1',aaa$V14)
genes
RNAseq_sample <- read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
View(RNAseq_sample)
sample_info <- read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
samples <- paste(sample_info$cellines,sample_info$rep_tag)
samples
names(samples) <- sample_info$sample_id
samples
vep_file <- c("~/Documents/vep_f.vep.txt")
keep_types <- c('frameshift_variant','inframe_deletion','inframe_insertion','missense_variant','protein_altering_variant','start_lost','stop_gained','stop_lost')
sample_info <- read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
vep_file <- c("~/Documents/vep_f.vep.txt")
samples <- paste(sample_info$cellines,sample_info$rep_tag)
names(samples) <- sample_info$sample_id
vep <- read.table(vep_file, quote="\"",stringsAsFactors = F)
vep_f <- vep[vep$V7 %in% keep_types,]
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE.+','\\1',vep_f$V14)
mut_table <- cbind(genes,vep_f$V4,vep_f$V5,vep_f$V7,vep_f$V8,vep_f$V9,vep_f$V10,vep_f$V11)
vep_file <- c("~/Documents/aaa.vep.txt")
vep <- read.table(vep_file, quote="\"",stringsAsFactors = F)
vep_f <- vep[vep$V7 %in% keep_types,]
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE.+','\\1',vep_f$V14)
mut_table <- cbind(genes,vep_f$V4,vep_f$V5,vep_f$V7,vep_f$V8,vep_f$V9,vep_f$V10,vep_f$V11)
keep_types <- c('frameshift_variant','inframe_deletion','inframe_insertion','missense_variant','protein_altering_variant','start_lost','stop_gained','stop_lost')
sample_info <- read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
vep_file <- c("~/Documents/10_S10_R-freebayes.vep")
samples <- paste(sample_info$cellines,sample_info$rep_tag)
names(samples) <- sample_info$sample_id
sample_id <- samples[gsub('(_R-freebayes.vep)','',vep_file)]
sample_id
gsub('(_R-freebayes.vep)','',vep_file
)
gsub('(.+/(.+)_R-freebayes.vep)','\\1',vep_file)
vep_files <- grep('vep',list.files(vep_folder),value = T)
keep_types  = c('frameshift_variant','inframe_deletion','inframe_insertion','missense_variant','protein_altering_variant','start_lost','stop_gained','stop_lost')
sample_info = read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
vep_folder  = "~/Documents/"
vep_files <- grep('vep',list.files(vep_folder),value = T)
samples <- paste(sample_info$cellines,sample_info$rep_tag)
names(samples) <- sample_info$sample_id
vep_files
keep_types  = c('frameshift_variant','inframe_deletion','inframe_insertion','missense_variant','protein_altering_variant','start_lost','stop_gained','stop_lost')
sample_info = read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
vep_folder  = "~/Documents/"
vep_files <- grep('vep',list.files(vep_folder),value = T)
samples <- paste(sample_info$cellines,sample_info$rep_tag)
names(samples) <- sample_info$sample_id
sample_id <- samples[gsub('(.+/(.+)_R-freebayes.vep)','\\1',vep_file)]
vep_file=vep_files[1]
vep_files
sample_id <- samples[gsub('_R-freebayes.vep','',vep_file)]
sample_id
sample_id <- samples[gsub('_R-freebayes.vep','',vep_file)]
vep <- read.table(paste(vep_folder,vep_file,sep = ''), quote="\"",stringsAsFactors = F)
vep_f <- vep[vep$V7 %in% keep_types,]
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE.+','\\1',vep_f$V14)
mut_table <- cbind(sample_id,genes,vep_f$V4,vep_f$V5,vep_f$V7,vep_f$V8,vep_f$V9,vep_f$V10,vep_f$V11)
View(mut_table)
colnames(mut_table) <- c('SAMPLE','SYMBOL','ENS_GENE','ENS_FEATURE','CONSEQUENCE','cDNA_POS','CDS_POS','PROT_POS','AMINO_ACID_CHANGE')
View(mut_table)
View(vep_f)
write.table(mut_table,'variation_results.tsv',sep = '\t')
write.table(mut_table,'variation_results.tsv',sep = '\t',row.names = F)
samples
samples <- paste(sample_info$cellines,sample_info$rep_tag)
samples <- gsub(' $','',samples)
samples
names(samples) <- sample_info$sample_id
keep_types  = c('frameshift_variant','inframe_deletion','inframe_insertion','missense_variant','protein_altering_variant','start_lost','stop_gained','stop_lost')
sample_info = read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
vep_folder  = "~/Documents/"
vep_parser <- function(vep_folder,vep_file,samples){
sample_id <- samples[gsub('_R-freebayes.vep','',vep_file)]
vep <- read.table(paste(vep_folder,vep_file,sep = ''), quote="\"",stringsAsFactors = F)
vep_f <- vep[vep$V7 %in% keep_types,]
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE.+','\\1',vep_f$V14)
mut_table <- cbind(sample_id,genes,vep_f$V4,vep_f$V5,vep_f$V7,vep_f$V8,vep_f$V9,vep_f$V10,vep_f$V11)
colnames(mut_table) <- c('SAMPLE','SYMBOL','ENS_GENE','ENS_FEATURE','CONSEQUENCE','cDNA_POS','CDS_POS','PROT_POS','AMINO_ACID_CHANGE')
return(mut_table)
}
vep_files <- grep('vep',list.files(vep_folder),value = T)
samples <- paste(sample_info$cellines,sample_info$rep_tag)
samples <- gsub(' $','',samples)
names(samples) <- sample_info$sample_id
mut_table <- NULL
for(vep_file in vep_files){
mut_table <- rbind(mut_table,vep_parser(vep_folder,vep_files,samples))
}
write.table(mut_table,'variation_results.tsv',sep = '\t',row.names = F)
keep_types  = c('frameshift_variant','inframe_deletion','inframe_insertion','missense_variant','protein_altering_variant','start_lost','stop_gained','stop_lost')
sample_info = read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/RNAseq_sample.tsv", stringsAsFactors=FALSE)
vep_folder  = "~/Documents/"
vep_parser <- function(vep_folder,vep_file,samples){
sample_id <- samples[gsub('_R-freebayes.vep','',vep_file)]
vep <- read.table(paste(vep_folder,vep_file,sep = ''), quote="\"",stringsAsFactors = F)
vep_f <- vep[vep$V7 %in% keep_types,]
genes <- gsub('.+SYMBOL=(.+);SYMBOL_SOURCE.+','\\1',vep_f$V14)
mut_table <- cbind(sample_id,genes,vep_f$V4,vep_f$V5,vep_f$V7,vep_f$V8,vep_f$V9,vep_f$V10,vep_f$V11)
colnames(mut_table) <- c('SAMPLE','SYMBOL','ENS_GENE','ENS_FEATURE','CONSEQUENCE','cDNA_POS','CDS_POS','PROT_POS','AMINO_ACID_CHANGE')
return(mut_table)
}
vep_files <- grep('vep$',list.files(vep_folder),value = T)
samples <- paste(sample_info$cellines,sample_info$rep_tag)
samples <- gsub(' $','',samples)
names(samples) <- sample_info$sample_id
mut_table <- NULL
vep_files
vep_file=vep_files
sample_id <- samples[gsub('_R-freebayes.vep','',vep_file)]
vep <- read.table(paste(vep_folder,vep_file,sep = ''), quote="\"",stringsAsFactors = F)
variation_results_full <- read.delim("~/Dropbox/_ChrisProject/workspace/variation_results_full.tsv", stringsAsFactors=FALSE)
View(variation_results_full)
cancer_gene1 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene1.csv", header=FALSE, stringsAsFactors=FALSE)
View(cancer_gene1)
cancer_gene1 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene1.csv", header=T, stringsAsFactors=FALSE,skip = 1)
View(cancer_gene1)
cancer_gene2 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene2.csv", header=T, stringsAsFactors=FALSE,skip = 1)
View(cancer_gene2)
cancer_gene1 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene1.csv", header=T, stringsAsFactors=FALSE,skip = 1)
cancer_gene2 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene2.csv", header=T, stringsAsFactors=FALSE,skip = 1)
cancer_gene3 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene3.csv", header=T, stringsAsFactors=FALSE,skip = 1)
cancer_gene4 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene4.csv", header=T, stringsAsFactors=FALSE,skip = 1)
cancer_gene5 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene5.csv", header=T, stringsAsFactors=FALSE,skip = 1)
cancer_gene6 <- read.csv("~/Dropbox/_ChrisProject/workspace/bcbio/annotations/cancer_gene6.csv", header=T, stringsAsFactors=FALSE,skip = 1)
View(cancer_gene1)
View(cancer_gene2)
View(cancer_gene3)
View(cancer_gene4)
View(cancer_gene5)
View(cancer_gene6)
View(cancer_gene1)
gene_list <- unique(c(cancer_gene1$Gene.Symbol,cancer_gene2$Gene.Symbol))
gene_list
View(cancer_gene1)
View(cancer_gene2)
gene_list <- unique(c(cancer_gene1$Gene.Symbol[c(-126,-127)],cancer_gene2$Gene.Symbol[-length(cancer_gene2$Gene.Symbol)]))
gene_list
variation_results_cancer <- variation_results_full[variation_results_full$SYMBOL %in% gene_list,]
View(variation_results_cancer)
write.table(variation_results_cancer,row.names = F)
write.table(variation_results_cancer,'variation_results_cancer.tsv',row.names = F)
CCLE_MUT_CNA_AMP_DEL_binary_Revealer <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
View(CCLE_MUT_CNA_AMP_DEL_binary_Revealer)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T, comment.char="#", stringsAsFactors=FALSE,skip = 1)
View(CCLE_MUT_CNA_AMP_DEL_binary_Revealer)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", comment.char="#", stringsAsFactors=FALSE,skip = 1)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T,col.names = F, comment.char="#", stringsAsFactors=FALSE,skip = 1)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T,col.names = NULL, comment.char="#", stringsAsFactors=FALSE,skip = 1)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T, comment.char="#", stringsAsFactors=FALSE,skip = 1)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T, comment.char="#", stringsAsFactors=FALSE,skip = 1,fill = '')
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=F, comment.char="#", stringsAsFactors=FALSE,skip = 1)
View(ccle)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T, comment.char="#", stringsAsFactors=FALSE,skip = 2)
View(ccle)
a=grep('_BREAST',colnames(ccle),value = T)
a
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T, comment.char="#", stringsAsFactors=FALSE,skip = 2)
mut_data <- read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/processed_data/basal/variation_results_full.tsv", stringsAsFactors=FALSE)
View(mut_data)
cell_intersect <- intersect(gsub('_BREAST','',grep('_BREAST',colnames(ccle),value = T)),mut_data$SAMPLE)
cell_intersect
gene_intersect <- intersect(gsub('_MUT','',ccle$Name),mut_data$SYMBOL)
gene_intersect
ccle_breast <- ccle[,paste(cell_intersect,'_BREAST',sep = '')]
View(ccle_breast)
rownames(ccle_breast) <- gsub('_MUT','',ccle$Name)
ccle_breast <- ccle_breast[apply(ccle_breast,1,sum)>0 | rownames(ccle_breast) %in% mut_data$SYMBOL,]
View(ccle_breast)
colnames(ccle_breast) <- gsub('_BREAST','',colnames(ccle_breast))
View(ccle_breast)
View(mut_data)
library(dplyr)
library(reshape2)
ccle_breast_table <- melt(ccle_breast)
View(ccle_breast_table)
ccle_breast_table <- melt(cbind(rownames(ccle_breast),ccle_breast))
View(ccle_breast_table)
View(mut_data)
View(ccle)
library(reshape2)
ccle <- read.delim("~/Downloads/CCLE_MUT_CNA_AMP_DEL_binary_Revealer.gct", header=T, comment.char="#", stringsAsFactors=FALSE,skip = 2)
mut_data <- read.delim("~/Dropbox/_ChrisProject/workspace/bcbio/processed_data/basal/variation_results_full.tsv", stringsAsFactors=FALSE)
cell_intersect <- intersect(gsub('_BREAST','',grep('_BREAST',colnames(ccle),value = T)),mut_data$SAMPLE)
ccle_breast <- ccle[,paste(cell_intersect,'_BREAST',sep = '')]
View(ccle_breast)
View(ccle)
gene_info_ccle <- strsplit(ccle$Name,split = '_')
head(gene_info_ccle)
aaa=lapply(gene_info_ccle,function(x)x[1])
aaa
aaa=unlist(lapply(gene_info_ccle,function(x)x[1]))
aaa
ccle_breast2=cbind(unlist(lapply(gene_info_ccle,function(x)x[1])),unlist(lapply(gene_info_ccle,function(x)x[1])),ccle_breast)
View(ccle_breast2)
ccle_breast2=cbind(unlist(lapply(gene_info_ccle,function(x)x[1])),unlist(lapply(gene_info_ccle,function(x)x[2])),ccle_breast)
View(ccle_breast2)
table(ccle_breast2[,2])
tail(ccle$Name)
ccle_breast2=cbind(gsub('\\..+','',unlist(lapply(gene_info_ccle,function(x)x[1]))),unlist(lapply(gene_info_ccle,function(x)x[2])),ccle_breast)
ccle_breast2=cbind(gsub('\\..+','',unlist(lapply(gene_info_ccle,function(x)x[1]))),gsub('.+(_.+)','\\1',ccle$Name),ccle_breast)
ccle_breast2=cbind(gsub('\\..+','',unlist(lapply(gene_info_ccle,function(x)x[1]))),gsub('.+_(.+)','\\1',ccle$Name),ccle_breast)
ccle_breast3 <- ccle_breast[apply(ccle_breast,1,sum)>0 | ccle_breast[,1] %in% mut_data$SYMBOL,]
View(mut_data)
View(ccle_breast3)
ccle_breast3 <- ccle_breast2[apply(ccle_breast,1,sum)>0 | ccle_breast[,1] %in% mut_data$SYMBOL,]
View(ccle_breast3)
colnames(ccle_breast3)[1:2] <- c('SYMBOL','TYPE')
View(ccle_breast3)
ccle_breast_table <- melt(ccle_breast3))
ccle_breast_table <- melt(ccle_breast3)
View(ccle_breast_table)
ccle_breast_table$variable <- gsub('_BREAST','',ccle_breast_table$variable)
View(ccle_breast_table)
cell_intersect
mut_data_i <- mut_data[mut_data$SAMPLE %in% cell_intersect,]
mut_data_i <- mut_data[mut_data$SAMPLE %in% cell_intersect,2:1]
View(mut_data_i)
ccle_mut <- ccle_breast_table[ccle_breast_table$TYPE=='MUT' | ccle_breast_table$value==1,c(1,3)]
mut_data_i <- mut_data[mut_data$SAMPLE %in% cell_intersect,2:1]
View(ccle_mut)
ccle_mut_list <- unique(paste(ccle_mut$SYMBOL,ccle_mut$variable,sep = '_'))
data_mut_list <- unique(paste(mut_data_i$SYMBOL,mut_data_i$SAMPLE,sep = '_'))
head(ccle_mut_list)
head(data_mut_list)
length(intersect(ccle_mut_list,data_mut_list))/length(ccle_mut_list)
length(intersect(ccle_mut_list,data_mut_list))/length(data_mut_list)
'MDAMB134' %in%ccle_mut$variable
View(mut_data)
mut_data_i <- mut_data[mut_data$SAMPLE %in% cell_intersect & mut_data$CONSEQUENCE=='missense_variant' ,2:1]
View(mut_data_i)
ccle_mut_list <- unique(paste(ccle_mut$SYMBOL,ccle_mut$variable,sep = '_'))
data_mut_list <- unique(paste(mut_data_i$SYMBOL,mut_data_i$SAMPLE,sep = '_'))
length(intersect(ccle_mut_list,data_mut_list))/length(ccle_mut_list)
length(intersect(ccle_mut_list,data_mut_list))/length(data_mut_list)
View(mut_data)
View(ccle_mut)
View(ccle_breast3)
View(mut_data)
library(viper)
#inport log2 fold change dataset
logFC <- read.csv("resources/logFC.csv", row.names=1, stringsAsFactors=FALSE)
# load regulon object
load("resources/regulon_symbol.rdata")
# VIPER for BT20 abe 3uM 6h
x <- logFC[,1]
names(x) <- rownames(logFC)
mrs <- msviper(x, regulon1, verbose = FALSE,minsize = 5)
result <- summary(mrs,mrs = length(mrs$es$nes))
source('~/Dropbox/_ChrisProject/workspace/viper/viper_infer/viper.R', echo=TRUE)
setwd("~/Dropbox/_ChrisProject/workspace/viper/viper_infer")
source('~/Dropbox/_ChrisProject/workspace/viper/viper_infer/viper.R', echo=TRUE)
View(result)
names(regulon1)
aaa=names(regulon1)
sum(result$Regulon %in% aaa)
View(result)
sum(result$NES == sort(result$NES))
